<?xml version="1.0" encoding="UTF-8"?>
<api context="/countryIso" name="GetCountriesByISO" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="GET" uri-template="/{ISOCode}">
        <inSequence>
            <property expression="get-property(&quot;uri.var.ISOCode&quot;)" name="res1" scope="default" type="STRING"/>
            <payloadFactory media-type="xml">
                <format>
                    <soap12:Envelope xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">
                        <soap12:Body>
                            <ListOfCountryNamesByName xmlns="http://www.oorsprong.org/websamples.countryinfo"/>
                        </soap12:Body>
                    </soap12:Envelope>
                </format>
                <args/>
            </payloadFactory>
            <header name="To" scope="default" value="ListOfCountryNamesByName"/>
            <call>
                <endpoint>
                    <address format="soap11" uri="http://webservices.oorsprong.org/websamples.countryinfo/CountryInfoService.wso">
                        <suspendOnFailure>
                            <initialDuration>-1</initialDuration>
                            <progressionFactor>-1</progressionFactor>
                            <maximumDuration>0</maximumDuration>
                        </suspendOnFailure>
                        <markForSuspension>
                            <retriesBeforeSuspension>0</retriesBeforeSuspension>
                        </markForSuspension>
                    </address>
                </endpoint>
            </call>
            <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
            <script language="js"><![CDATA[var ISOCode = mc.getProperty('res1');
                
    // Get the SOAP response as an XML object
    var xmlBody = mc.getPayloadXML();
                
    // Create the namespace object for our SOAP service
    var ns = new Namespace("http://www.oorsprong.org/websamples.countryinfo");
                
    // Iterate over the list of countries
    for each (var country in xmlBody..ns::tCountryCodeAndName) {
        // If the ISO code of the current country matches the provided ISO code...
        if (country.ns::sISOCode == ISOCode) {
            // Set the matching country as the new body
            mc.setPayloadXML(country);
            break;
        }
    }]]></script>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence/>
    </resource>
</api>
